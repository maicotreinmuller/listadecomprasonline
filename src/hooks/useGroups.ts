import { useState, useEffect } from 'react';

const STORAGE_KEY = 'shopping-list-groups';

const DEFAULT_GROUPS = [
  'ü•¨ Hortifruti',
  'ü•© Carnes',
  'ü•õ Latic√≠nios',
  'ü•ñ Padaria',
  'ü•´ Mercearia',
  'üßÉ Bebidas',
  'üßπ Limpeza',
  'üß¥ Higiene',
  'üßä Congelados',
  'ü•ú Cereais',
  'üçù Massas',
  'ü•´ Enlatados',
  'üßÇ Temperos',
  'üç¨ Doces',
  'üê∂ Pet Shop',
  'üì¶ Outros'
].sort((a, b) => a.localeCompare(b, 'pt-BR', { sensitivity: 'base' }));

// Fun√ß√£o auxiliar para ordenar grupos de A a Z
const sortGroups = (groups: string[]): string[] => {
  return [...groups].sort((a, b) => 
    a.localeCompare(b, 'pt-BR', { 
      sensitivity: 'base',  // Ignora diferen√ßas de mai√∫sculas/min√∫sculas
      numeric: true        // Ordena n√∫meros corretamente
    })
  );
};

export function useGroups() {
  const [groups, setGroups] = useState<string[]>(() => {
    const savedGroups = localStorage.getItem(STORAGE_KEY);
    return savedGroups ? sortGroups(JSON.parse(savedGroups)) : DEFAULT_GROUPS;
  });

  useEffect(() => {
    localStorage.setItem(STORAGE_KEY, JSON.stringify(groups));
  }, [groups]);

  const addGroup = (group: string) => {
    if (!groups.includes(group)) {
      setGroups(sortGroups([...groups, group]));
    }
  };

  const removeGroup = (group: string) => {
    setGroups(sortGroups(groups.filter(g => g !== group)));
  };

  return { groups, addGroup, removeGroup };
}